// Mixins to use on the minidigital build
// import this file using @import "_mixins"

@import "mixins/flexbox";

.visually-hidden() {
    position: absolute;
    overflow: hidden;
    clip: rect(0 0 0 0);
    height: 1px;
    width: 1px;
    margin: -1px;
    padding: 0;
    border: 0;
}

.reset-visually-hidden() {
    position: static;
    overflow: visible;
    clip: auto;
    height: auto;
    width: auto;
    margin: 0;
}

.perspective (@length) {
    -webkit-perspective:    @length;
    -moz-perspective:       @length;
    perspective:            @length;
}

.transform-style (@value) {
    -webkit-transform-style:    @value;
    -moz-transform-style:       @value;
    transform-style:            @value;
}

.backface-visibility (@value) {
    -webkit-backface-visibility:    @value;
    -moz-backface-visibility:       @value;
    backface-visibility:            @value;
}

.rotate (@deg) {
    -webkit-transform:   rotate(@deg);
    -moz-transform:      rotate(@deg);
    -ms-transform:       rotate(@deg);
    -o-transform:        rotate(@deg);
}

.transition (@transition) {
    -webkit-transition: @transition;
    -moz-transition:    @transition;
    -ms-transition:     @transition;
    -o-transition:      @transition;
    transition:         @transition;
}

.transition-prefix (@transition) {
    -webkit-transition: ~"-webkit-@{transition}";
    -moz-transition:    ~"-moz-@{transition}";
    -ms-transition:     ~"-ms-@{transition}";
    -o-transition:      ~"-o-@{transition}";
    transition:         @transition;
}

.transition-multiple-props(...) {//http://stackoverflow.com/a/10413399/1582783
    @props: ~`"@{arguments}".replace(/[\[\]]/g, '')`;
    -webkit-transition: @props;
    -moz-transition: @props;
    -o-transition: @props;
    transition: @props;
}


.transition-property (...) {
    @props: ~`"@{arguments}".replace(/[\[\]]/g, '')`;
    -webkit-transition-property: @props;
    -moz-transition-property:    @props;
    -ms-transition-property:     @props;
    -o-transition-property:      @props;
    transition-property:         @props;
}

.transition-timing-function (@function) {
    -webkit-transition-timing-function: @function;
    -moz-transition-timing-function:    @function;
    -ms-transition-timing-function:     @function;
    -o-transition-timing-function:      @function;
    transition-timing-function:         @function;
}

.transition-duration (@duration) {
    -webkit-transition-duration: @duration;
    -moz-transition-duration:    @duration;
    -ms-transition-duration:     @duration;
    -o-transition-duration:      @duration;
    transition-duration:         @duration;
}

.transition-delay (@delay) {
    -webkit-transition-delay: @delay;
    -moz-transition-delay:    @delay;
    -ms-transition-delay:     @delay;
    -o-transition-delay:      @delay;
    transition-delay:         @delay;
}

.transition-transform (@settings) {
    -webkit-transition: -webkit-transform @settings;
    -moz-transition:    -moz-transform @settings;
    -ms-transition:     -ms-transform @settings;
    -o-transition:      -o-transform @settings;
    transition:         transform @settings;
}

.transition-filter (@settings) {
    -webkit-transition: -webkit-filter @settings;
    -moz-transition:    -moz-filter @settings;
    -ms-transition:     -ms-filter @settings;
    -o-transition:      -o-filter @settings;
    transition:         filter @settings,  -webkit-filter @settings, -moz-filter @settings, -ms-filter @settings, -o-filter @settings;
    // comma separated list of transitions required here, as a singular
    // prefixed transition will otherwise get overwritten, and break
    // in browsers that don't yet support unprefixed transition: filter
}

.transform (@transform) {
    -webkit-transform: @transform;
    -moz-transform:    @transform;
    -ms-transform:     @transform;
    -o-transform:      @transform;
    transform:         @transform;
}

.transform-origin (@values) {
    -webkit-transform-origin:   @values;
    -moz-transform-origin:      @values;
    -ms-transform-origin:       @values;
    transform-origin:           @values;
}

.animation (@string) {
    -webkit-animation:  @string;
    -moz-animation:     @string;
    -o-animation:       @string;
    animation:          @string;
}

.border-radius (@amount) {
    -webkit-border-radius:  @amount;
    -moz-border-radius:     @amount;
    -o-border-radius:       @amount;
    border-radius:          @amount;
}

.text-shadow (@string: 0 1px 3px rgba(0, 0, 0, 0.25)) {
    text-shadow: @string;
}

.box-shadow (@string) {
    -webkit-box-shadow: @string;
    -moz-box-shadow:    @string;
    box-shadow:         @string;
}

.box-sizing (@string) {
    -webkit-box-sizing: @string;
    -moz-box-sizing:    @string;
    box-sizing:         @string;
}

.user-select (@value) {
    -webkit-user-select:   @value;
    -moz-user-select:      @value;
    -khtml-user-select:    @value;
    -ms-user-select:       @value;
    user-select:           @value;
}

.inline-block () {
    display: -moz-inline-stack;
    display: inline-block;
    vertical-align: top;
    *vertical-align: auto;
    zoom: 1;
    *display: inline;
}

.blur(@value){
    filter: blur(@value);
    -webkit-filter: blur(@value);
}

//http://css-tricks.com/snippets/css/useful-css3-less-mixins/
.gradient (@startColor: #eee, @endColor: white) {
    background-color: @startColor;
    background: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
    background: -webkit-linear-gradient(top, @startColor, @endColor);
    background: -moz-linear-gradient(top, @startColor, @endColor);
    background: -ms-linear-gradient(top, @startColor, @endColor);
    background: -o-linear-gradient(top, @startColor, @endColor);
}

.gradient-vertical (@startColor: #eee, @endColor: white) {
    .gradient(@startColor, @endColor);
}

.gradient-horizontal (@startColor: #eee, @endColor: white) {
    background-color: @startColor;
    background-image: -webkit-gradient(linear, left top, right top, from(@startColor), to(@endColor));
    background-image: -webkit-linear-gradient(left, @startColor, @endColor);
    background-image: -moz-linear-gradient(left, @startColor, @endColor);
    background-image: -ms-linear-gradient(left, @startColor, @endColor);
    background-image: -o-linear-gradient(left, @startColor, @endColor);
}

.font-size(@sizeValue) {
    @remValue: ((@sizeValue/100) * 62.5);
    @pxValue: (@sizeValue * 10);
    font-size: ~"@{pxValue}px";
    font-size: ~"@{remValue}rem";
}

.font-size(@sizeValue, @lineHeight) {
    .font-size(@sizeValue);
    line-height: ( @lineHeight / @sizeValue );
}

// specifies relative line-height if font sizeValue is known
.line-height(@sizeValue, @lineHeight) {
    line-height: ( @lineHeight / @sizeValue );
}

.column-count(@countValue) {
    -webkit-column-count: @countValue;
    -moz-column-count: @countValue;
    column-count: @countValue;
}

.column-gap(@gapValue) {
    -webkit-column-gap: @gapValue;
    -moz-column-gap: @gapValue;
    column-gap: @gapValue;
}

.break-inside(@breakValue) {
    -webkit-column-break-inside: @breakValue; /* Chrome, Safari, Opera */
    page-break-inside: @breakValue; /* Firefox */
    break-inside: @breakValue; /* IE 10+ */
}

.clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear:both;
    }
}

.font-size-vw(@width, @px-at-width) {
    .font-size(@px-at-width / 10);
    @vwValue: @px-at-width / @width * 100;
    font-size: ~"@{vwValue}vw";
}

.selection-background(@background) {
    //Required for FF 2.0 - latest
    ::-moz-selection {
        background: @background;
    }
    ::selection {
        background: @background;
    }
}

.MY_PROJECT-cols(@gutter) {
    margin-left: -@gutter;
    padding: 0;
}

.MY_PROJECT-cols-column(@items-per-row, @gutter) {
    @width: (100% / @items-per-row);
    width: calc(~"@{width} - @{gutter}");
    margin-left: @gutter;
}

.tab-focus() {
  outline: 0;
  cursor: pointer;
}

.placeholder(@color: false){
    &::-webkit-input-placeholder {
        color: @color;
    }
    &:-moz-placeholder {
        color: @color;
    }
    &::-moz-placeholder {
        color: @color;
    }
    &:-ms-input-placeholder {
        color: @color;
    }
}

.MY_PROJECT-rotate-text(@deg) {
    -webkit-transform: rotate(@deg);
    -moz-transform: rotate(@deg);
    -ms-transform: rotate(@deg);
    -o-transform: rotate(@deg);
}
